/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practica4smm;

import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsEnvironment;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.TextAttribute;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author juanmaaf
 */
public class VentanaP6 extends javax.swing.JFrame {
    
    boolean ventanaClipActiva;
    Ellipse2D clipArea = new Ellipse2D.Float(100,100,500,500);
    
    /**
     * Creates new form VentanaP6
     */
    public VentanaP6() {
        initComponents();
        
        GraphicsEnvironment ge;
        ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String []fuentesSistema = ge.getAvailableFontFamilyNames();
        
        listaFuentes.setModel(new DefaultComboBoxModel(fuentesSistema));
        ventanaClipActiva = false;
    }

    public void setVentanaClipActiva(boolean ventanaClipActiva) {
        this.ventanaClipActiva = ventanaClipActiva;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelinferior = new javax.swing.JPanel();
        listaFuentes = new javax.swing.JComboBox<>();
        clipVentana = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listaFuentes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        panelinferior.add(listaFuentes);

        clipVentana.setText("Clip Ventana");
        clipVentana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clipVentanaActionPerformed(evt);
            }
        });
        panelinferior.add(clipVentana);

        getContentPane().add(panelinferior, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void clipVentanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clipVentanaActionPerformed
        // TODO add your handling code here:
        setVentanaClipActiva(clipVentana.isSelected());
        repaint();
    }//GEN-LAST:event_clipVentanaActionPerformed

    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics2D g2d = (Graphics2D)g;
        
        if (ventanaClipActiva) {
            g2d.setClip(clipArea);
        }
        
        this.pruebaAtributos(g2d);
    }
    private void pruebaAtributos(Graphics2D g2d){
        //Trazo
        Stroke trazo;
        // TODO: Código para crear trazo
        float patronDiscontinuidad[] = {15.0f, 15.0f};
        trazo = new BasicStroke(10.0f,
        BasicStroke.CAP_ROUND,
        BasicStroke.JOIN_MITER, 1.0f,
        patronDiscontinuidad, 0.0f);
        g2d.setStroke(trazo);
        //Pintamos una forma de prueba
        g2d.draw(new Line2D.Float(40,40,160,160));
        
        //Relleno
        Paint relleno;
        // TODO: Código para crear relleno
        relleno = new Color(255, 100, 0);
        g2d.setPaint(relleno);
        g2d.draw(new Rectangle(170,40,120,120));
        g2d.fill(new Rectangle(300,40,120,120));
        
        Point pc1 = new Point(430,40), pc2 = new Point(550,160);
        relleno = new GradientPaint(pc1, Color.RED, pc2, Color.BLUE);
        g2d.setPaint(relleno);
        g2d.fill(new Rectangle(430,40,120,120));
        
        //Composición
        Composite comp;
        // TODO: Código para crear composición
        comp = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);
        g2d.setComposite(comp);
        g2d.fill(new Rectangle(190, 100, 200, 120));
        
        //Transformación
        Rectangle r = new Rectangle(430, 190, 120, 120);
        g2d.draw(r); //Dibujamos rectángulo sin transformación
        AffineTransform at;
        // TODO: Código para crear transformación
        at = AffineTransform.getRotateInstance(Math.toRadians(45.0),
        r.getCenterX(),
        r.getCenterY());
        g2d.setTransform(at);
        g2d.fill(r); //Dibujamos rectángulo con transformación
        
        at = AffineTransform.getScaleInstance(0.5,0.5);
        g2d.setTransform(at);
        g2d.draw(r);
        
        at.setToIdentity();
        at.translate(r.getCenterX(),r.getCenterY());
        at.scale(0.5,0.5);
        at.translate(-r.getCenterX(),-r.getCenterY());
        g2d.setTransform(at);
        g2d.draw(r);
        
        //Fuente
        Font fuente;
        // TODO: Código para crear fuente
        fuente = new Font("Arial", Font.BOLD | Font.ITALIC, 45);
        g2d.setFont(fuente);
        g2d.drawString("Hola", 30, 220);
        
        Map atributosTexto = fuente.getAttributes();
        atributosTexto.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        g2d.setFont( new Font(atributosTexto) );
        g2d.drawString("mundo", 30, 260);
        
        //Renderización
        RenderingHints render;
        // TODO: Código para crear renderizado
        g2d.draw(new Ellipse2D.Float(40,350,510,50)); //Elipse sin antialiasing
        render = new RenderingHints(RenderingHints.KEY_ANTIALIASING,
        RenderingHints.VALUE_ANTIALIAS_ON);
        
        render.put(RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY);
        
        g2d.setRenderingHints(render);
        g2d.draw(new Ellipse2D.Float(40,450,510,50)); //Elipse con antialiasing
        g2d.drawString("Hola", 30, 170); 
        
        if(!ventanaClipActiva){
            //Recorte
            Shape clipArea;
            // TODO: Código para crear clip
            clipArea = new Ellipse2D.Float(100,100,500,500);
            g2d.setClip(clipArea);
            g2d.draw(clipArea);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox clipVentana;
    private javax.swing.JComboBox<String> listaFuentes;
    private javax.swing.JPanel panelinferior;
    // End of variables declaration//GEN-END:variables
}
