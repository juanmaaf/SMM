/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package practica4smm;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Shape;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.CubicCurve2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Path2D;
import java.awt.geom.Point2D;
import java.awt.geom.QuadCurve2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;


/**
 *
 * @author juanmaaf
 */
public class LienzoP5 extends javax.swing.JPanel {
    
    private Color color;
    private boolean relleno;
    private Shape forma;
    private HerramientaDibujo herramienta;
    private Point punto_inicial;
    /**
     * Creates new form LienzoP5
     */
    public LienzoP5() {
        initComponents();
        
        color = Color.black;
        relleno = false;
        forma = null;
        punto_inicial = null;
        
        this.setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public Color getColor(){
        return color;
    }
    
    
    public boolean getRelleno(){
        return relleno;
    }
    
    public void setColor(Color c){
        color = c;
    }
    
    public void setRelleno(boolean r){
        relleno = r;
    }
    
    public HerramientaDibujo getHerramienta(){
        return herramienta;
    }
    
    public void setHerramienta(HerramientaDibujo h){
        herramienta = h;
    }
    
    public void borrarLienzo(){
        //figuras.clear();
        //colores.clear();
        //rellenos.clear();
        
        forma = null;
        repaint();
    }
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics2D g2d=(Graphics2D)g;
        // Línea
        Point2D p1=new Point2D.Float(70,70);
        Point2D p2=new Point2D.Float(200,200);
        Line2D linea = new Line2D.Float(p1,p2);
        g2d.draw(linea);
        
        //Rectángulo 
        Point2D p3=new Point2D.Float(80, 200);
        Rectangle2D rectangulo = new Rectangle2D.Double(p3.getX(), p3.getY(), 100, 50);
        g2d.draw(rectangulo);
        
        //Round Rectangle
        Point2D p4=new Point2D.Float(300, 150);
        RoundRectangle2D round = new RoundRectangle2D.Double(p4.getX(), p4.getY(), 200, 50, 10, 10);
        g2d.draw(round);
        
        //Elipse
        Point2D p5=new Point2D.Float(30, 300);
        Ellipse2D elipse = new Ellipse2D.Double(p5.getX(), p5.getY(), 80, 50);
        g2d.draw(elipse);
        
        //Arco
        Point2D p6=new Point2D.Float(80, 100);
        Arc2D arco = new Arc2D.Double(p6.getX(), p6.getY(), 200, 60, 50, 80,2);
        g2d.draw(arco);
        
        //QuadCurve2D
        Point2D p7=new Point2D.Float(100, 100);
        Point2D p8=new Point2D.Float(200, 50);
        Point2D p9=new Point2D.Float(400, 400);
        QuadCurve2D quadcurve = new QuadCurve2D.Double(p7.getX(), p7.getY(), p8.getX(), p8.getY(), p9.getX(), p9.getY());
        g2d.draw(quadcurve);
        
        //CubicCurve2D
        Point2D p10=new Point2D.Float(300, 200);
        Point2D p11=new Point2D.Float(400, 50);
        Point2D p12=new Point2D.Float(500, 200);
        Point2D p13=new Point2D.Float(600, 100);
        CubicCurve2D cubiccurve = new CubicCurve2D.Double(p10.getX(), p10.getY(), p11.getX(), p11.getY(), p12.getX(), p12.getY(), p13.getX(), p13.getY());
        g2d.draw(cubiccurve);
        
        //General Path
        // draw GeneralPath (polyline)
        int x2Points[] = {0, 100, 0, 100};
        int y2Points[] = {0, 50, 50, 0};
        GeneralPath polyline = 
                new GeneralPath(GeneralPath.WIND_EVEN_ODD, x2Points.length);

        polyline.moveTo (x2Points[0], y2Points[0]);

        for (int index = 1; index < x2Points.length; index++) {
                 polyline.lineTo(x2Points[index], y2Points[index]);
        };

        g2d.draw(polyline);
        
        // draw GeneralPath (polygon)
        int x1Points[] = {100, 200, 100, 200};
        int y1Points[] = {0, 50, 50, 0};
        GeneralPath polygon = 
                new GeneralPath(GeneralPath.WIND_EVEN_ODD,
                                x1Points.length);
        polygon.moveTo(x1Points[0], y1Points[0]);

        for (int index = 1; index < x1Points.length; index++) {
                polygon.lineTo(x1Points[index], y1Points[index]);
        };

        polygon.closePath();
        g2d.draw(polygon);
        
        //Area
       
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
